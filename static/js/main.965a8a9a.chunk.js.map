{"version":3,"sources":["components/HEADER/Header.js","components/TABLE/Table.js","components/APP/App.js","index.js"],"names":["Header","state","react_default","a","createElement","className","Component","Table","_this","this","props","name","tasks","map","el","index","key","taskStatus","replace","toLowerCase","href","taskLink","taskName","studs","mentorGit","mentorName","split","splice","studentGit","studentName","taskList","taskEl","task","filter","r","mentors","StudList","forEach","push","label","value","_","sortBy","uniqBy","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","localStorage","setItem","nameInput","setState","_this2","HEADER_Header","react_select_esm","options","onClick","submit","bind","onChange","opt","placeholder","getItem","components_TABLE_Table","Tasks","ReactDOM","render","components_APP_App","document","getElementById"],"mappings":"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","file":"static/js/main.965a8a9a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Header extends Component {\r\n    state = {\r\n\r\n    }\r\n  render() {\r\n    return (\r\n      <header className=\"App-header\">\r\n        <h1>DASHBOARD for RSS from GARNICH </h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './Table.css';\r\n\r\nclass Table extends Component {\r\n  \r\n  render() {\r\n    if(this.props.name){      \r\n    return (\r\n      <div>\r\n        <table>   \r\n          <thead>\r\n            <tr>\r\n              <th>student name</th>        \r\n              { this.props.tasks.map((el, index)=>{\r\n                  return <th key={'th'+index}><a className={(el.taskStatus.replace(/\\s/g, '')).toLowerCase()} href = {el.taskLink} key={'tasklink'+index}>{el.taskName}</a></th>\r\n              })}\r\n            </tr> \r\n          </thead>  \r\n            \r\n          {this.props.studs.map((el,index)=>{\r\n            if((el.mentorGit === this.props.name) || (el.mentorName === this.props.name) ||(el.mentorGit.split('https://github.com/').splice(1)[0] === this.props.name) || (el.mentorGit.split('http://github.com/').splice(1)[0]) === this.props.name){\r\n                  return (\r\n                          <tbody key={'tbody'+index}>\r\n                            <tr key={'trow'+index}>  \r\n                              <td key={'tdata'+index}>\r\n                                <a className='students' key={'studentName'+index} href = {el.studentGit} >{el.studentName}</a>\r\n                              </td>\r\n                                  {el.taskList.map(function(taskEl, index){\r\n                                    if((el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()] === '-')&&(taskEl.taskStatus===\"Checked\")){\r\n                                    return(\r\n                                            <td className='notpass' key={'taskResult'+index}>{el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()] }</td>\r\n                                           )\r\n                                    }\r\n                                    if((el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()] !== '-')&&(taskEl.taskStatus===\"Checked\")){\r\n                                      return(\r\n                                              <td className='pass' key={'taskResult'+index}>{el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()]}</td>\r\n                                            )\r\n                                    }\r\n                                    if((el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()] !== '-')&&(taskEl.taskStatus===\"In Progress\")){\r\n                                      return(\r\n                                              <td className='progress' key={'taskResult'+index}>{el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()]}</td>\r\n                                            )\r\n                                    }\r\n                                    if((el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()] === '-')&&(taskEl.taskStatus===\"In Progress\")){\r\n                                      return(\r\n                                              <td className='progress' key={'taskResult'+index}>{el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()]}</td>\r\n                                            )\r\n                                    }\r\n                                    if((el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()] !== '-')&&(taskEl.taskStatus===\"Checking\")){\r\n                                      return(\r\n                                              <td className='checked' key={'taskResult'+index}>{el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()]}</td>\r\n                                            )\r\n                                    }\r\n                                    if((el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()] === '-')&&(taskEl.taskStatus===\"Checking\")){\r\n                                      return(\r\n                                              <td className='checking' key={'taskResult'+index}>{el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()]}</td>\r\n                                            )\r\n                                    }\r\n                                    if(taskEl.taskStatus===\"ToDo\"){\r\n                                      return(\r\n                                              <td className='todo' key={'taskResult'+index}>{el.task[taskEl.taskName.replace(/\\s/g, '').toLowerCase()]}</td>\r\n                                            )\r\n                                    }\r\n                                    })\r\n                                  }   \r\n                            </tr>\r\n                          </tbody> \r\n              )}              \r\n            }).filter(r=>r)}\r\n        </table>\r\n      </div>\r\n    );}\r\n    else{\r\n      return <div></div>     \r\n    }\r\n  }\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport _ from 'lodash';\nimport './App.css';\nimport Header from '../HEADER/Header';\nimport Table from '../TABLE/Table';\n\nimport Tasks from '../../data/data-json/Tasks.json';\nimport StudList from '../../data/data-json/newWorkers.json';\n\nlet mentors=[];\nStudList.forEach((el, index)=>mentors.push({label: el.mentorName, value: index}));\nmentors = _.sortBy(_.uniqBy(mentors,'label'),'label');\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      name: ''\n    }  \n  }\n    \n  submit(){\n    localStorage.setItem(\"mentorName\",this.nameInput);\n    this.setState({name: this.nameInput})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>   \n        <Select options={mentors} className = 'mentor' onClick={this.submit.bind(this)} onChange={opt => this.nameInput = opt.label} placeholder = {localStorage.getItem(\"mentorName\")}/>            \n        <button onClick={this.submit.bind(this)}>Search</button>\n        <Table tasks={Tasks} studs={StudList} name={ localStorage.getItem(\"mentorName\")||this.nameInput|| this.state.name}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/APP/App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}